name: Integration

on:
  push:
    tags-ignore:
      - '*'
    paths:
      - '**.kt'
      - '**.kts'
      - '**/gradle.properties'
      - '**/gradlew'
      - '**/gradlew.bat'
      - '.github/workflows/**'
  pull_request:
    paths:
      - '**.kt'
      - '**.kts'
      - '**/gradle.properties'
      - '**/gradlew'
      - '**/gradlew.bat'
      - '.github/workflows/**'

  workflow_dispatch:

# Make sure only one run is ever queued simultaneously to save resources.
# If a run is queued when one is already queued, the old one will get cancelled before it starts.
concurrency:
  group: 'integration'
  cancel-in-progress: false

jobs:
  test_linux:
    name: Run tests on Linux
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3.3.0

      - name: Run native tests
        run: ./gradlew linuxX64Test --info

      - name: Install Java for JVM tests
        uses: actions/setup-java@v3
        with:
          distribution: 'zulu'
          java-version: '8'

      - name: Run JVM tests
        run: ./gradlew jvmTest --info

      - name: Publish test results
        uses: actions/upload-artifact@v3
        with:
          name: test-results-linux
          path: |
            build/test-results/
            build/reports/

  test_macos:
    name: Run tests on MacOS
    runs-on: macos-latest
    steps:
      - uses: actions/checkout@v3.3.0

      - name: Run native tests
        run: ./gradlew macosX64Test --info

      - name: Install Java for JVM tests
        uses: actions/setup-java@v3
        with:
          distribution: 'zulu'
          java-version: '8'

      - name: Run JVM tests
        run: ./gradlew jvmTest --info

      - name: Publish test results
        uses: actions/upload-artifact@v3
        with:
          name: test-results-macos
          path: |
            build/test-results/
            build/reports/

  test_windows:
    name: Run tests on Windows
    runs-on: windows-latest
    steps:
      - uses: actions/checkout@v3.3.0

      - name: Run native tests
        run: ./gradlew windowsX64Test --info

      - name: Install Java for JVM tests
        uses: actions/setup-java@v3
        with:
          distribution: 'zulu'
          java-version: '8'

      - name: Run JVM tests
        run: ./gradlew jvmTest --info

      - name: Publish test results
        uses: actions/upload-artifact@v3
        with:
          name: test-results-windows
          path: |
            build/test-results/
            build/reports/
